import { useIsFocused } from "@react-navigation/native";
import React, { useEffect, useState } from "react";
import {
  ScrollView,
  TouchableHighlight,
  View,
  Text,
  Dimensions,
  StatusBar,
} from "react-native";
import { SvgXml } from "react-native-svg";
import { useDispatch, useSelector } from "react-redux";
import { setHideBottomBar } from "../../../Reducers/hideBottomBar";
import AccountDetailsCart from "./AccountDetailsCart";
import { createMaterialTopTabNavigator } from "@react-navigation/material-top-tabs";
import RecentTransaction from "./RecentTransaction";
import RecentWithdraw from "./RecentWithdraw";
import IconButton from "../../../components/IconButton";
import { getAccountInfo } from "../../../Class/account";
import { getVerificationDetails } from "../../../Class/service";
import { useSafeAreaInsets } from "react-native-safe-area-context";
import customStyle from "../../../assets/stylesheet";
import ActivityLoader from "../../../components/ActivityLoader";
import useLang from "../../../Hooks/UseLang";
const { width, height } = Dimensions.get("window");

export default function AccountBalance({ navigation }) {
  const isFocused = useIsFocused();
  const dispatch = useDispatch();
  const Tab = createMaterialTopTabNavigator();
  const user = useSelector((state) => state.user);
  const vendor = useSelector((state) => state.vendor);
  const [data, setData] = useState();
  const [verification, setVerification] = useState();
  const inset = useSafeAreaInsets();
  const { language } = useLang();
  const isBn = language == "Bn";
  //console.log(vendor.service.verified)

  // React.useEffect(() => {
  //   if (isFocused) {
  //     dispatch(setHideBottomBar(true));
  //   } else {
  //     dispatch(setHideBottomBar(false));
  //   }
  // }, [isFocused]);
  useEffect(() => {
    getAccountInfo(user.token, vendor.service.id)
      .then((res) => {
        //console.log(res.data)
        setData(res.data);
      })
      .catch((err) => {
        console.error(err.response.data.msg);
      });
    getVerificationDetails(user.token, vendor.service.id).then((res) => {
      //console.log(res.data)
      //console.log(res.data.verification)
      setVerification(res.data.verification);
    });
  }, [isFocused]);
  if (!data) {
    return (
      <View style={customStyle.fullBox}>
        <ActivityLoader />
      </View>
    );
  }
  return (
    <View style={{ flex: 1, paddingTop: inset?.top }}>
      <ScrollView showsVerticalScrollIndicator={false}>
        <MasterCart
          onVerify={() => {
            if (!verification) {
              navigation.navigate("FirstStepVerification");
              return;
            }
            navigation.navigate("ReviewVerification");
          }}
          verified={data?.service?.verified}
          id={data?.bankDetails ? data?.bankDetails?.accountNumber : "N/A"}
          name={`${
            data?.bankDetails ? data?.bankDetails?.accountHolderName : "N/A"
          }`}
        />
        <AccountDetailsCart
          amount={data?.balance}
          totalEarnings={data?.totalEarnings}
          pendingAmount={data?.pending}
          onWithdraw={() => {
            if (verification?.accept) {
              navigation.navigate("WithdrawFirst", {
                id: data?.id,
                amount: data?.balance,
              });
            } else if (!verification) {
              navigation.navigate("RequestVerification");
            } else {
              navigation.navigate("ReviewVerification");
            }
          }}
        />
        <View
          style={{
            paddingHorizontal: 20,
            height: 450,
          }}
        >
          <Tab.Navigator tabBar={(props) => <TabBar {...props} />}>
            <Tab.Screen
              name={isBn ? "সকল লেনদেন" : "Transaction history"}
              component={RecentTransaction}
            />
            <Tab.Screen
              name={isBn ? "সকল উত্তোলন" : "Withdraw history"}
              component={RecentWithdraw}
            />
          </Tab.Navigator>
        </View>
      </ScrollView>
    </View>
  );
}
const MasterCart = ({ name, id, verified, onVerify }) => {
  const { language } = useLang();
  const isBn = language == "Bn";
  return (
    <View
      style={{
        justifyContent: "center",
        marginVertical: 10,
        backgroundColor: "#485563",
        padding: 0,
        width: width - 40,
        marginLeft: 20,
        height: 207,
        borderRadius: 10,
        overflow: "hidden",
      }}
    >
      <SvgXml
        width={width}
        style={{
          width: width,
          position: "absolute",
          zIndex: -1,
        }}
        xml={cart}
      />
      <View
        style={{
          top: 0,
          height: "100%",
          width: "100%",
          padding: "8%",
        }}
      >
        <View
          style={{
            height: 75,
            alignItems: "center",
            flexDirection: "row",
            justifyContent: "space-between",
          }}
        >
          <SvgXml xml={chip} />
          {verified ? (
            <SvgXml xml={isBn ? verifiedIconBn : verifiedIcon} />
          ) : (
            <TouchableHighlight
              onPress={onVerify}
              style={{
                paddingHorizontal: 8,
                paddingVertical: 4,
                borderRadius: 5,
                borderColor: "white",
                borderWidth: 1,
              }}
            >
              <Text
                style={{
                  color: "white",
                  fontSize: 16,
                }}
              >
                {isBn ? "ভেরিফাই করুন" : "Verify now"}
              </Text>
            </TouchableHighlight>
          )}
        </View>
        <View
          style={{
            flex: 1,
            justifyContent: "flex-end",
          }}
        >
          <Text
            style={{
              fontSize: 24,
              color: "white",
            }}
          >
            {name}
          </Text>
          <Text
            style={{
              fontSize: 12,
              color: "white",
              marginVertical: 5,
            }}
          >
            Acc No: {id}
          </Text>
        </View>
      </View>
    </View>
  );
};
const verifiedIcon = `<svg width="84" height="20" viewBox="0 0 84 20" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M6.353 1.549C6.77496 1.06223 7.29673 0.671956 7.88287 0.404682C8.46901 0.137407 9.1058 -0.000610312 9.75 2.02868e-06C11.107 2.02868e-06 12.323 0.600002 13.147 1.549C13.7897 1.50311 14.4347 1.59609 15.0383 1.82161C15.6419 2.04713 16.1899 2.39992 16.645 2.856C17.1009 3.31106 17.4536 3.85888 17.6791 4.46226C17.9046 5.06564 17.9977 5.71047 17.952 6.353C18.4386 6.77505 18.8287 7.29686 19.0958 7.883C19.3629 8.46913 19.5007 9.10588 19.5 9.75C19.5006 10.3942 19.3626 11.031 19.0953 11.6171C18.828 12.2033 18.4378 12.725 17.951 13.147C17.9967 13.7895 17.9036 14.4344 17.6781 15.0377C17.4526 15.6411 17.0999 16.1889 16.644 16.644C16.1889 17.0999 15.6411 17.4526 15.0377 17.6781C14.4344 17.9036 13.7895 17.9967 13.147 17.951C12.725 18.4378 12.2033 18.828 11.6171 19.0953C11.031 19.3626 10.3942 19.5006 9.75 19.5C9.1058 19.5006 8.46901 19.3626 7.88287 19.0953C7.29673 18.828 6.77496 18.4378 6.353 17.951C5.71038 17.997 5.06538 17.9042 4.46181 17.6789C3.85824 17.4535 3.31023 17.1009 2.855 16.645C2.39897 16.1898 2.04622 15.6419 1.8207 15.0383C1.59518 14.4347 1.50218 13.7897 1.548 13.147C1.06141 12.7249 0.671328 12.2031 0.404228 11.617C0.137128 11.0309 -0.000733612 10.3941 2.93585e-06 9.75C2.93585e-06 8.393 0.600003 7.177 1.549 6.353C1.50326 5.71047 1.5963 5.06562 1.82182 4.46222C2.04734 3.85883 2.40005 3.31103 2.856 2.856C3.31103 2.40005 3.85883 2.04734 4.46222 1.82182C5.06562 1.5963 5.71047 1.50326 6.353 1.549ZM13.36 7.936C13.42 7.85605 13.4634 7.76492 13.4877 7.66795C13.512 7.57098 13.5166 7.47014 13.5014 7.37136C13.4861 7.27257 13.4513 7.17783 13.3989 7.0927C13.3465 7.00757 13.2776 6.93378 13.1963 6.87565C13.1149 6.81753 13.0228 6.77624 12.9253 6.75423C12.8278 6.73222 12.7269 6.72992 12.6285 6.74746C12.5301 6.76501 12.4362 6.80205 12.3523 6.85641C12.2684 6.91077 12.1962 6.98135 12.14 7.064L8.904 11.594L7.28 9.97C7.13783 9.83752 6.94978 9.7654 6.75548 9.76883C6.56118 9.77225 6.37579 9.85097 6.23838 9.98838C6.10097 10.1258 6.02226 10.3112 6.01883 10.5055C6.0154 10.6998 6.08752 10.8878 6.22 11.03L8.47 13.28C8.54699 13.3569 8.6398 13.4162 8.74199 13.4536C8.84418 13.4911 8.9533 13.5059 9.06177 13.4969C9.17024 13.488 9.27546 13.4555 9.37013 13.4019C9.4648 13.3482 9.54665 13.2745 9.61 13.186L13.36 7.936Z" fill="#4ADE80"/>
<path d="M33.7298 3.83088L29.6097 14.75H27.9648L23.8446 3.83088H25.3642L28.7951 13.2461L32.2259 3.83088H33.7298ZM43.1259 10.1286C43.1259 10.4001 43.1103 10.6873 43.0789 10.9902H36.2173C36.2695 11.8361 36.5567 12.4993 37.0789 12.9798C37.6115 13.4497 38.2538 13.6847 39.0058 13.6847C39.622 13.6847 40.1337 13.5437 40.5411 13.2617C40.9588 12.9693 41.2512 12.5829 41.4183 12.1025H42.9536C42.7238 12.9275 42.2643 13.6012 41.575 14.1234C40.8857 14.6351 40.0293 14.891 39.0058 14.891C38.1912 14.891 37.4601 14.7082 36.8126 14.3427C36.1755 13.9771 35.6742 13.4602 35.3086 12.7918C34.9431 12.1129 34.7603 11.3296 34.7603 10.4419C34.7603 9.55415 34.9379 8.77608 35.293 8.10766C35.6481 7.43925 36.1442 6.9275 36.7812 6.57241C37.4288 6.20687 38.1703 6.0241 39.0058 6.0241C39.8204 6.0241 40.5411 6.20165 41.1677 6.55674C41.7943 6.91184 42.2747 7.4027 42.609 8.02934C42.9536 8.64553 43.1259 9.34527 43.1259 10.1286ZM41.6533 9.83091C41.6533 9.28783 41.5332 8.82307 41.293 8.43665C41.0528 8.03978 40.7238 7.74213 40.3061 7.54369C39.8988 7.33481 39.4444 7.23037 38.9431 7.23037C38.2225 7.23037 37.6063 7.46014 37.0946 7.91967C36.5933 8.37921 36.306 9.01629 36.2329 9.83091H41.6533ZM46.4333 7.55936C46.6839 7.06849 47.039 6.68729 47.4985 6.41575C47.9685 6.14421 48.5377 6.00844 49.2061 6.00844V7.48103H48.8301C47.2322 7.48103 46.4333 8.34787 46.4333 10.0816V14.75H45.0077V6.16509H46.4333V7.55936ZM51.5881 4.77083C51.3165 4.77083 51.0868 4.67684 50.8988 4.48884C50.7108 4.30085 50.6168 4.07109 50.6168 3.79955C50.6168 3.528 50.7108 3.29824 50.8988 3.11025C51.0868 2.92226 51.3165 2.82826 51.5881 2.82826C51.8492 2.82826 52.0685 2.92226 52.246 3.11025C52.434 3.29824 52.528 3.528 52.528 3.79955C52.528 4.07109 52.434 4.30085 52.246 4.48884C52.0685 4.67684 51.8492 4.77083 51.5881 4.77083ZM52.2774 6.16509V14.75H50.8518V6.16509H52.2774ZM58.2005 7.34004H56.399V14.75H54.9734V7.34004H53.8611V6.16509H54.9734V5.55413C54.9734 4.59328 55.2188 3.89354 55.7097 3.4549C56.211 3.00581 57.0099 2.78126 58.1066 2.78126V3.97187C57.4799 3.97187 57.0361 4.0972 56.775 4.34785C56.5243 4.58806 56.399 4.99015 56.399 5.55413V6.16509H58.2005V7.34004ZM60.599 4.77083C60.3275 4.77083 60.0977 4.67684 59.9097 4.48884C59.7217 4.30085 59.6277 4.07109 59.6277 3.79955C59.6277 3.528 59.7217 3.29824 59.9097 3.11025C60.0977 2.92226 60.3275 2.82826 60.599 2.82826C60.8601 2.82826 61.0794 2.92226 61.257 3.11025C61.445 3.29824 61.539 3.528 61.539 3.79955C61.539 4.07109 61.445 4.30085 61.257 4.48884C61.0794 4.67684 60.8601 4.77083 60.599 4.77083ZM61.2883 6.16509V14.75H59.8627V6.16509H61.2883ZM71.5509 10.1286C71.5509 10.4001 71.5353 10.6873 71.5039 10.9902H64.6423C64.6945 11.8361 64.9817 12.4993 65.5039 12.9798C66.0366 13.4497 66.6789 13.6847 67.4308 13.6847C68.047 13.6847 68.5588 13.5437 68.9661 13.2617C69.3838 12.9693 69.6763 12.5829 69.8434 12.1025H71.3786C71.1489 12.9275 70.6893 13.6012 70 14.1234C69.3107 14.6351 68.4543 14.891 67.4308 14.891C66.6162 14.891 65.8851 14.7082 65.2376 14.3427C64.6005 13.9771 64.0992 13.4602 63.7337 12.7918C63.3681 12.1129 63.1854 11.3296 63.1854 10.4419C63.1854 9.55415 63.3629 8.77608 63.718 8.10766C64.0731 7.43925 64.5692 6.9275 65.2063 6.57241C65.8538 6.20687 66.5953 6.0241 67.4308 6.0241C68.2454 6.0241 68.9661 6.20165 69.5927 6.55674C70.2193 6.91184 70.6998 7.4027 71.034 8.02934C71.3786 8.64553 71.5509 9.34527 71.5509 10.1286ZM70.0783 9.83091C70.0783 9.28783 69.9582 8.82307 69.718 8.43665C69.4778 8.03978 69.1488 7.74213 68.7311 7.54369C68.3238 7.33481 67.8695 7.23037 67.3682 7.23037C66.6475 7.23037 66.0313 7.46014 65.5196 7.91967C65.0183 8.37921 64.7311 9.01629 64.658 9.83091H70.0783ZM72.9 10.4262C72.9 9.54893 73.0776 8.7813 73.4327 8.12333C73.7878 7.45492 74.2734 6.93795 74.8896 6.57241C75.5162 6.20687 76.216 6.0241 76.9888 6.0241C77.6573 6.0241 78.2787 6.18076 78.8531 6.49408C79.4275 6.79695 79.8661 7.19904 80.169 7.70035V3.15724H81.6103V14.75H80.169V13.1364C79.887 13.6482 79.4693 14.0711 78.9157 14.4054C78.3622 14.7291 77.7147 14.891 76.9732 14.891C76.2108 14.891 75.5162 14.703 74.8896 14.327C74.2734 13.951 73.7878 13.4236 73.4327 12.7448C73.0776 12.0659 72.9 11.2931 72.9 10.4262ZM80.169 10.4419C80.169 9.79436 80.0385 9.23039 79.7774 8.74997C79.5163 8.26955 79.1612 7.90401 78.7121 7.65335C78.2734 7.39226 77.7878 7.26171 77.2552 7.26171C76.7225 7.26171 76.2369 7.38703 75.7982 7.63769C75.3596 7.88834 75.0097 8.25388 74.7486 8.7343C74.4875 9.21472 74.357 9.77869 74.357 10.4262C74.357 11.0842 74.4875 11.6586 74.7486 12.1495C75.0097 12.6299 75.3596 13.0006 75.7982 13.2617C76.2369 13.5124 76.7225 13.6377 77.2552 13.6377C77.7878 13.6377 78.2734 13.5124 78.7121 13.2617C79.1612 13.0006 79.5163 12.6299 79.7774 12.1495C80.0385 11.6586 80.169 11.0894 80.169 10.4419Z" fill="white"/>
</svg>
`;
const verifiedIconBn = `<svg width="91" height="20" viewBox="0 0 91 20" fill="none" xmlns="http://www.w3.org/2000/svg">
<path fill-rule="evenodd" clip-rule="evenodd" d="M6.353 1.549C6.77496 1.06223 7.29673 0.671956 7.88287 0.404682C8.46901 0.137407 9.1058 -0.000610312 9.75 2.02868e-06C11.107 2.02868e-06 12.323 0.600002 13.147 1.549C13.7897 1.50311 14.4347 1.59609 15.0383 1.82161C15.6419 2.04713 16.1899 2.39992 16.645 2.856C17.1009 3.31106 17.4536 3.85888 17.6791 4.46226C17.9046 5.06564 17.9977 5.71047 17.952 6.353C18.4386 6.77505 18.8287 7.29686 19.0958 7.883C19.3629 8.46913 19.5007 9.10588 19.5 9.75C19.5006 10.3942 19.3626 11.031 19.0953 11.6171C18.828 12.2033 18.4378 12.725 17.951 13.147C17.9967 13.7895 17.9036 14.4344 17.6781 15.0377C17.4526 15.6411 17.0999 16.1889 16.644 16.644C16.1889 17.0999 15.6411 17.4526 15.0377 17.6781C14.4344 17.9036 13.7895 17.9967 13.147 17.951C12.725 18.4378 12.2033 18.828 11.6171 19.0953C11.031 19.3626 10.3942 19.5006 9.75 19.5C9.1058 19.5006 8.46901 19.3626 7.88287 19.0953C7.29673 18.828 6.77496 18.4378 6.353 17.951C5.71038 17.997 5.06538 17.9042 4.46181 17.6789C3.85824 17.4535 3.31023 17.1009 2.855 16.645C2.39897 16.1898 2.04622 15.6419 1.8207 15.0383C1.59518 14.4347 1.50218 13.7897 1.548 13.147C1.06141 12.7249 0.671328 12.2031 0.404228 11.617C0.137128 11.0309 -0.000733612 10.3941 2.93585e-06 9.75C2.93585e-06 8.393 0.600003 7.177 1.549 6.353C1.50326 5.71047 1.5963 5.06562 1.82182 4.46222C2.04734 3.85883 2.40005 3.31103 2.856 2.856C3.31103 2.40005 3.85883 2.04734 4.46222 1.82182C5.06562 1.5963 5.71047 1.50326 6.353 1.549ZM13.36 7.936C13.42 7.85605 13.4634 7.76492 13.4877 7.66795C13.512 7.57098 13.5166 7.47014 13.5014 7.37136C13.4861 7.27257 13.4513 7.17783 13.3989 7.0927C13.3465 7.00757 13.2776 6.93378 13.1963 6.87565C13.1149 6.81753 13.0228 6.77624 12.9253 6.75423C12.8278 6.73222 12.7269 6.72992 12.6285 6.74746C12.5301 6.76501 12.4362 6.80205 12.3523 6.85641C12.2684 6.91077 12.1962 6.98135 12.14 7.064L8.904 11.594L7.28 9.97C7.13783 9.83752 6.94978 9.7654 6.75548 9.76883C6.56118 9.77225 6.37579 9.85097 6.23838 9.98838C6.10097 10.1258 6.02226 10.3112 6.01883 10.5055C6.0154 10.6998 6.08752 10.8878 6.22 11.03L8.47 13.28C8.54699 13.3569 8.6398 13.4162 8.74199 13.4536C8.84418 13.4911 8.9533 13.5059 9.06177 13.4969C9.17024 13.488 9.27546 13.4555 9.37013 13.4019C9.4648 13.3482 9.54665 13.2745 9.61 13.186L13.36 7.936Z" fill="#4ADE80"/>
<path d="M29.0771 5.00582V6.1181H28.7637C28.44 6.1912 28.0901 6.35309 27.7141 6.60374C27.3381 6.84395 26.983 7.16249 26.6488 7.55936C26.3146 7.94578 26.0379 8.40009 25.8186 8.92229C25.6097 9.44449 25.5052 10.0189 25.5052 10.6455C25.5052 11.3975 25.6149 11.998 25.8342 12.4471C26.064 12.8858 26.346 13.1991 26.6802 13.3871C27.0144 13.5751 27.3486 13.6691 27.6828 13.6691C27.9439 13.6691 28.1632 13.6429 28.3408 13.5907C28.5183 13.5385 28.722 13.4445 28.9517 13.3087L29.5 14.2644C29.2285 14.4732 28.9308 14.6195 28.6071 14.703C28.2833 14.7866 27.9543 14.8283 27.6201 14.8283C26.9622 14.8283 26.3825 14.656 25.8812 14.3114C25.3799 13.9667 24.983 13.4863 24.6906 12.8701C24.4086 12.2435 24.2676 11.5124 24.2676 10.6769C24.2676 9.87269 24.393 9.15728 24.6436 8.53064C24.9047 7.89356 25.2389 7.34004 25.6462 6.87006C26.064 6.40008 26.5131 6.01366 26.9935 5.71078C27.4739 5.39747 27.9387 5.16248 28.3878 5.00582H29.0771ZM35.5267 14.0764C34.8479 14.0764 34.2108 13.9667 33.6155 13.7474C33.0202 13.5281 32.4615 13.1625 31.9393 12.6508C31.4275 12.139 30.9575 11.4602 30.5293 10.6142C30.1011 9.76825 29.7147 8.71863 29.3701 7.46536L30.5607 7.15205C30.9366 8.53064 31.3596 9.64292 31.8296 10.4889C32.31 11.3244 32.8479 11.9354 33.4432 12.3218C34.0489 12.6978 34.733 12.8858 35.4954 12.8858C36.0489 12.8858 36.5189 12.7865 36.9053 12.5881C37.3022 12.3897 37.6051 12.1181 37.814 11.7735C38.0228 11.4184 38.1273 11.0163 38.1273 10.5672C38.1273 10.2539 38.096 9.9719 38.0333 9.72125C37.9706 9.4706 37.8819 9.24605 37.767 9.04762C37.6625 8.83874 37.5424 8.66119 37.4067 8.51498L38.1586 7.29304C38.5555 7.86745 38.8479 8.4262 39.0359 8.96929C39.2239 9.51237 39.3179 10.0502 39.3179 10.5829C39.3179 11.2408 39.1717 11.8361 38.8792 12.3688C38.5868 12.891 38.1586 13.3087 37.5946 13.6221C37.0411 13.9249 36.3518 14.0764 35.5267 14.0764ZM34.9314 10.3009C34.2735 10.3009 33.7565 10.139 33.3805 9.81525C33.0045 9.48104 32.8166 9.02673 32.8166 8.45231C32.8166 8.2121 32.8531 7.97712 32.9262 7.74735C32.9993 7.50714 33.0776 7.30348 33.1612 7.13638L34.4145 7.51236C34.3414 7.6168 34.2735 7.74735 34.2108 7.90401C34.1482 8.06067 34.1168 8.22255 34.1168 8.38965C34.1168 8.67164 34.1951 8.87529 34.3518 9.00062C34.5085 9.12595 34.7121 9.18861 34.9628 9.18861C35.1821 9.18861 35.4014 9.14683 35.6207 9.06328C35.8401 8.97973 36.0751 8.81785 36.3257 8.57764C36.5868 8.32699 36.8688 7.95101 37.1717 7.4497L38.1586 7.29304L38.0333 8.139C37.7513 8.60897 37.4537 9.00584 37.1403 9.3296C36.8375 9.64292 36.5033 9.88313 36.1377 10.0502C35.7826 10.2173 35.3805 10.3009 34.9314 10.3009ZM40.3675 5.00582V6.1181H28.7591V5.00582H40.3675ZM44.53 5.00582V6.1181H42.8851V14.75H41.6788V6.1181H40.0495V5.00582H41.4908C41.3237 4.80738 41.1514 4.59851 40.9738 4.37918C40.8067 4.15986 40.6553 3.94054 40.5195 3.72122C40.8746 3.10503 41.2558 2.54628 41.6631 2.04497C42.0704 1.53321 42.5509 1.13112 43.1044 0.838693C43.6579 0.535819 44.3263 0.384383 45.1096 0.384383C45.6631 0.384383 46.1906 0.452268 46.6919 0.588039C47.2036 0.72381 47.7049 0.922245 48.1958 1.18334C48.6867 1.434 49.1828 1.74209 49.6841 2.10763C50.1854 2.46272 50.7076 2.85959 51.2506 3.29824L50.5927 4.1442C49.872 3.55934 49.2193 3.07369 48.6344 2.68727C48.06 2.30084 47.5065 2.01363 46.9739 1.82564C46.4517 1.62721 45.8929 1.52799 45.2976 1.52799C44.7232 1.52799 44.2219 1.62721 43.7937 1.82564C43.3759 2.02408 43.0104 2.30084 42.6971 2.65594C42.3942 3.01103 42.1174 3.42356 41.8668 3.89354C41.9503 4.0502 42.0652 4.22252 42.2114 4.41052C42.3576 4.59851 42.5247 4.79694 42.7127 5.00582H44.53ZM53.861 5.00582V6.1181H52.2161V14.75H51.0098C50.6965 14.1234 50.263 13.5489 49.7095 13.0268C49.1664 12.4941 48.5398 12.045 47.8296 11.6795C47.1194 11.3139 46.3622 11.0685 45.5581 10.9432L44.9471 9.43926C45.9497 8.83352 46.9836 8.28521 48.0489 7.79435C49.1247 7.30348 50.2317 6.88573 51.3701 6.54108L51.0098 7.19904V6.1181H44.2108V5.00582H53.861ZM51.0098 7.32437L51.3388 7.76302C50.545 8.02411 49.7095 8.34787 48.8322 8.7343C47.9549 9.11028 47.1455 9.52804 46.404 9.98757C46.968 10.1129 47.5685 10.327 48.2056 10.6299C48.8427 10.9327 49.4328 11.3139 49.9758 11.7735C50.5189 12.233 50.9367 12.7657 51.2291 13.3714H51.0881C51.0672 13.1312 51.0463 12.891 51.0254 12.6508C51.015 12.4106 51.0098 12.1234 51.0098 11.7891V7.32437ZM47.2656 14.844C47.0045 14.844 46.78 14.7604 46.592 14.5933C46.4145 14.4262 46.3257 14.2069 46.3257 13.9354C46.3257 13.6638 46.4145 13.4393 46.592 13.2617C46.78 13.0842 47.0045 12.9954 47.2656 12.9954C47.5267 12.9954 47.7461 13.0842 47.9236 13.2617C48.1116 13.4393 48.2056 13.6638 48.2056 13.9354C48.2056 14.2069 48.1116 14.4262 47.9236 14.5933C47.7461 14.7604 47.5267 14.844 47.2656 14.844ZM66.9843 5.00582V6.1181H55.7362L55.4856 5.9771C55.9242 6.08154 56.3629 6.24865 56.8015 6.47841C57.2506 6.70818 57.6631 6.95883 58.0391 7.23037C58.4255 7.49147 58.7336 7.74213 58.9634 7.98234L59.0417 8.85963C58.6658 9.02673 58.2689 9.2095 57.8511 9.40793C57.4438 9.60637 57.0469 9.8048 56.6605 10.0032C56.2845 10.2017 55.9503 10.4001 55.6579 10.5985L55.4856 10.3322C56.3002 10.4993 57.0156 10.7134 57.6318 10.9745C58.248 11.2356 58.8015 11.5489 59.2924 11.9145C59.7833 12.28 60.2532 12.7082 60.7023 13.1991C60.6919 13.0215 60.6814 12.8388 60.671 12.6508C60.671 12.4628 60.671 12.2696 60.671 12.0711V6.7604H60.8746C61.4491 6.7604 62.0026 6.8074 62.5352 6.90139C63.0783 6.99539 63.5796 7.15205 64.0391 7.37137C64.5091 7.59069 64.9217 7.88834 65.2768 8.26432C65.5274 8.52542 65.7258 8.82307 65.8721 9.15728C66.0287 9.48104 66.107 9.84136 66.107 10.2382C66.107 10.5829 66.0339 10.9119 65.8877 11.2252C65.752 11.528 65.5274 11.7787 65.2141 11.9771C64.9008 12.1756 64.483 12.2748 63.9608 12.2748C63.8042 12.2748 63.6475 12.2696 63.4908 12.2591C63.3446 12.2487 63.1984 12.2278 63.0522 12.1965L63.1305 11.0842C63.1932 11.0946 63.2715 11.1051 63.3655 11.1155C63.4595 11.1155 63.5587 11.1155 63.6632 11.1155C64.1749 11.1155 64.5039 11.0163 64.6501 10.8179C64.8068 10.6194 64.8851 10.3844 64.8851 10.1129C64.8851 9.58026 64.6136 9.11028 64.0705 8.70297C63.5378 8.29566 62.8068 8.045 61.8773 7.95101V14.75H60.671C60.2428 14.1651 59.7676 13.6534 59.2454 13.2147C58.7336 12.7761 58.1331 12.4106 57.4438 12.1181C56.765 11.8153 55.9556 11.5855 55.0156 11.4288L54.4516 10.0032C54.7754 9.78391 55.1148 9.57504 55.4699 9.3766C55.825 9.17817 56.1853 8.98495 56.5509 8.79696C56.9268 8.60897 57.2924 8.43143 57.6475 8.26432C57.2506 7.96145 56.7911 7.69513 56.2689 7.46536C55.7571 7.22515 55.1514 7.03194 54.4516 6.88573L54.9373 5.82044L54.9686 6.1181H53.543V5.00582H66.9843ZM71.1497 5.00582V6.1181H69.5048V14.75H68.2986V7.4027C68.1732 7.04761 67.9852 6.74473 67.7346 6.49408C67.4944 6.24342 67.1811 6.1181 66.7946 6.1181H66.6693V5.00582H66.9043C67.1549 5.00582 67.416 5.08937 67.6876 5.25647C67.9591 5.41313 68.1785 5.65856 68.3456 5.99277C68.3351 5.94055 68.3247 5.82045 68.3142 5.63245C68.3038 5.44446 68.2986 5.28258 68.2986 5.14681V3.97187H69.1445L69.4892 5.00582H71.1497ZM76.5956 5.00582C76.5852 4.57762 76.4807 4.26952 76.2823 4.08153C76.0943 3.89354 75.781 3.79955 75.3423 3.79955H74.2144C73.5251 3.79955 72.9924 3.75255 72.6165 3.65855C72.2509 3.56456 71.9376 3.41834 71.6765 3.21991C71.3945 3.01103 71.1804 2.74471 71.0342 2.42095C70.8984 2.08674 70.8306 1.71076 70.8306 1.293C70.8306 1.15723 70.841 1.02146 70.8619 0.885691C70.8723 0.74992 70.888 0.608927 70.9089 0.462712L72.0682 0.541041C72.0473 0.666369 72.0316 0.77603 72.0212 0.870025C72.0107 0.964021 72.0055 1.05279 72.0055 1.13635C72.0055 1.36611 72.0264 1.56977 72.0682 1.74731C72.1204 1.92486 72.1987 2.07108 72.3031 2.18596C72.4494 2.35306 72.6582 2.47839 72.9298 2.56194C73.2118 2.63505 73.6086 2.6716 74.1204 2.6716H75.0133C75.5669 2.6716 76.0055 2.71338 76.3293 2.79693C76.653 2.88048 76.9298 3.03192 77.1596 3.25124C77.3371 3.41834 77.4729 3.64811 77.5669 3.94054C77.6609 4.22252 77.7131 4.57762 77.7235 5.00582H76.5956ZM74.7784 6.91706C75.6034 6.91706 76.2666 7.05805 76.7679 7.34004C77.2797 7.61158 77.6557 7.96145 77.8959 8.38965C78.1361 8.80741 78.2562 9.23039 78.2562 9.65859C78.2562 10.515 77.9533 11.1938 77.3476 11.6952C76.7523 12.1965 75.8645 12.4784 74.6844 12.5411L74.841 12.3688C75.311 12.5046 75.8071 12.6978 76.3293 12.9484C76.8515 13.1991 77.3789 13.4915 77.9115 13.8257C78.4442 14.1495 78.9559 14.5098 79.4468 14.9067L78.7262 15.737C78.0786 15.2565 77.4833 14.844 76.9402 14.4993C76.4076 14.1443 75.8802 13.8362 75.358 13.5751C74.8358 13.314 74.2823 13.0842 73.6974 12.8858C73.1126 12.6873 72.4494 12.5046 71.7078 12.3375L71.9428 11.2565C72.3084 11.3609 72.6582 11.4393 72.9924 11.4915C73.3371 11.5333 73.7496 11.5542 74.2301 11.5542C74.9716 11.5542 75.5408 11.4654 75.9376 11.2878C76.3449 11.1103 76.6269 10.8805 76.7836 10.5985C76.9402 10.3166 77.0186 10.0293 77.0186 9.73692C77.0186 9.18339 76.8149 8.76041 76.4076 8.46798C76.0003 8.16511 75.4833 8.01367 74.8567 8.01367C74.4807 8.01367 74.1778 8.05022 73.9481 8.12333C73.7183 8.19644 73.5512 8.3061 73.4468 8.45231C73.3528 8.58808 73.3058 8.75519 73.3058 8.95362C73.3058 9.03717 73.3162 9.12595 73.3371 9.21994C73.358 9.30349 73.3789 9.38182 73.3998 9.45493L72.2561 9.68992C72.2039 9.53326 72.1622 9.37138 72.1308 9.20428C72.0995 9.02673 72.0838 8.87007 72.0838 8.7343C72.0838 8.34787 72.1987 8.01889 72.4285 7.74735C72.6582 7.47581 72.9716 7.27215 73.3684 7.13638C73.7757 6.99016 74.2457 6.91706 74.7784 6.91706ZM73.7287 7.46536C73.6765 7.13116 73.5199 6.83873 73.2588 6.58807C72.9977 6.32698 72.6217 6.14421 72.1308 6.03977L72.5068 5.3348L73.2274 5.52279C73.8123 5.75256 74.2353 6.01366 74.4964 6.30609C74.7679 6.59852 74.9246 6.96928 74.9663 7.41837L73.7287 7.46536ZM79.4468 5.00582V6.1181H70.8306V5.00582H79.4468ZM90.6052 5.00582V6.1181H84.8715V8.92229C84.8715 9.22516 84.9185 9.44971 85.0125 9.59592C85.1065 9.73169 85.2527 9.79958 85.4511 9.79958C85.6495 9.79958 85.8532 9.73692 86.0621 9.61159C86.2814 9.48626 86.5164 9.28783 86.767 9.01629C87.0177 8.74474 87.2892 8.39487 87.5817 7.96667L88.5216 7.82568C88.8558 8.31654 89.1117 8.82307 89.2892 9.34527C89.4772 9.86747 89.5712 10.3897 89.5712 10.9119C89.5712 11.5698 89.425 12.1599 89.1326 12.6821C88.8506 13.2043 88.4276 13.6168 87.8637 13.9197C87.3101 14.2226 86.6313 14.374 85.8271 14.374C85.1378 14.374 84.4955 14.2539 83.9002 14.0137C83.3049 13.7735 82.7566 13.3871 82.2553 12.8544C81.754 12.3113 81.2944 11.6012 80.8767 10.7239C80.4589 9.83613 80.0829 8.74997 79.7487 7.46536L80.9393 7.15205C81.3153 8.60375 81.7278 9.77347 82.1769 10.6612C82.6365 11.5385 83.1587 12.1808 83.7435 12.5881C84.3284 12.985 85.002 13.1834 85.7644 13.1834C86.5999 13.1834 87.2422 12.9745 87.6913 12.5568C88.1509 12.139 88.3806 11.6012 88.3806 10.9432C88.3806 10.4732 88.3127 10.0711 88.177 9.73692C88.0516 9.40271 87.8845 9.12595 87.6757 8.90662L88.3963 8.60897C88.083 9.14161 87.7592 9.58026 87.425 9.92491C87.1012 10.2696 86.7723 10.5307 86.4381 10.7082C86.1143 10.8753 85.7905 10.9589 85.4668 10.9589C85.2266 10.9589 85.002 10.9275 84.7931 10.8649C84.5843 10.7918 84.4067 10.6873 84.2605 10.5515C84.0934 10.4053 83.9524 10.2017 83.8375 9.94057C83.7226 9.66903 83.6652 9.21994 83.6652 8.59331V6.1181H79.1378V5.00582H90.6052Z" fill="white"/>
</svg>
`;
const cart = `<svg width="329" height="207" viewBox="0 0 329 207" fill="none" xmlns="http://www.w3.org/2000/svg">
<rect width="328.914" height="207" rx="12" fill="url(#paint0_linear_2820_18796)"/>
<defs>
<linearGradient id="paint0_linear_2820_18796" x1="0" y1="103.5" x2="328.914" y2="103.5" gradientUnits="userSpaceOnUse">
<stop stop-color="#485563"/>
<stop offset="1" stop-color="#29323C"/>
</linearGradient>
</defs>
</svg>

`;
const chip = `<svg width="52" height="35" viewBox="0 0 52 35" fill="none" xmlns="http://www.w3.org/2000/svg">
<g clip-path="url(#clip0_2960_17342)">
<path d="M45.6469 0.578857H5.98647C2.68024 0.578857 0 3.17689 0 6.38173V28.8678C0 32.0727 2.68024 34.6707 5.98647 34.6707H45.6469C48.9531 34.6707 51.6333 32.0727 51.6333 28.8678V6.38173C51.6333 3.17689 48.9531 0.578857 45.6469 0.578857Z" fill="#F2E07C"/>
<path d="M45.6465 0.941406H5.9861C2.8865 0.941406 0.373779 3.37706 0.373779 6.3816V28.8677C0.373779 31.8722 2.8865 34.3079 5.9861 34.3079H45.6465C48.7461 34.3079 51.2588 31.8722 51.2588 28.8677V6.3816C51.2588 3.37706 48.7461 0.941406 45.6465 0.941406Z" stroke="#672525" stroke-width="0.737886"/>
<path d="M0.00732422 12.1207H16.5255" stroke="#672525" stroke-width="0.737886"/>
<path d="M16.5249 6.11694H33.0431" stroke="#672525" stroke-width="0.737886"/>
<path d="M39.4409 17.6248H51.8838" stroke="#672525" stroke-width="0.737886"/>
<path d="M33.043 11.3707H51.6257" stroke="#672525" stroke-width="0.737886" stroke-linecap="round"/>
<path d="M0.373779 23.8796H51.6255" stroke="#672525" stroke-width="0.737886" stroke-linecap="round"/>
<path d="M16.5249 24.3691V34.6366" stroke="#672525" stroke-width="0.737886" stroke-linecap="round"/>
<path d="M8.78223 12.1207V23.6438" stroke="#672525" stroke-width="0.737886" stroke-linecap="round"/>
<path d="M24.7849 24.6304V34.6374" stroke="#672525" stroke-width="0.737886" stroke-linecap="round"/>
<path d="M39.4409 11.3707V23.8795" stroke="#672525" stroke-width="0.737886" stroke-linecap="round"/>
<path d="M16.5249 0.362793V12.1209" stroke="#672525" stroke-width="0.737886" stroke-linecap="round"/>
<path d="M32.5269 23.8796V34.8877" stroke="#672525" stroke-width="0.737886"/>
<path d="M33.043 0.362793V11.3708" stroke="#672525" stroke-width="0.737886" stroke-linecap="round"/>
<path d="M22.0915 20.5263C23.7537 20.5263 25.1012 19.2272 25.1012 17.6248C25.1012 16.0224 23.7537 14.7234 22.0915 14.7234C20.4293 14.7234 19.0818 16.0224 19.0818 17.6248C19.0818 19.2272 20.4293 20.5263 22.0915 20.5263Z" stroke="#672525" stroke-width="0.737886"/>
<path d="M27.2975 20.5263C28.9598 20.5263 30.3072 19.2272 30.3072 17.6248C30.3072 16.0224 28.9598 14.7234 27.2975 14.7234C25.6353 14.7234 24.2878 16.0224 24.2878 17.6248C24.2878 19.2272 25.6353 20.5263 27.2975 20.5263Z" stroke="#672525" stroke-width="0.737886"/>
</g>
<defs>
<clipPath id="clip0_2960_17342">
<rect width="52" height="35" fill="white"/>
</clipPath>
</defs>
</svg>
`;
const TabBar = ({ state, navigation }) => {
  //console.log(state.index)
  return (
    <View
      style={{
        flexDirection: "row",
        justifyContent: "space-between",
        marginVertical: 10,
      }}
    >
      {state.routes.map((doc, i) => (
        <IconButton
          onPress={() => {
            navigation.navigate(doc.name);
          }}
          style={{
            borderRadius: 30,
            height: 37,
            paddingHorizontal: 20,
            backgroundColor: state.index === i ? "#484848" : null,
            color: state.index === i ? "white" : "black",
            borderWidth: state.index === i ? 0 : 1,
          }}
          key={i}
          title={doc.name}
        />
      ))}
    </View>
  );
};
